@page "/respond/{id:guid}"

<PageTitle>Proposal Response - Dungeon Dates</PageTitle>

@if (_response is null)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7"/>
}
else
{
    <MudGrid Spacing="2">
        <MudItem xs="12">
            <MudText Typo="Typo.h3" Color="Color.Primary" Align="Align.Center">Proposal Response</MudText>
        </MudItem>
        <MudItem xs="12">
            <img src="/divider.png" alt="Fancy divider" class="fantasy-divider"/>
        </MudItem>
        @if (_response.NoDatesWork)
        {
            <MudItem xs="12">
                <MudAlert Severity="Severity.Error" ShowCloseIcon="false">
                    Alas, the stars refuse to align - none of these dates please all the adventurers. <MudLink Href="/add" Color="Color.Error" Style="font-weight: bolder;" Underline="Underline.Always">Summon new dates?</MudLink>
                </MudAlert>
            </MudItem>
        }
        @if (!_hasAlreadyResponded)
        {
            <MudItem xs="12" Class="py-2">
                <MudAlert Severity="Severity.Info" ShowCloseIcon="false">
                    Enter your name and then answer whether you are available for each of the given date(s) below.
                </MudAlert>
            </MudItem>
        }
        else
        {
            <MudItem xs="12" Class="py-2">
                <MudAlert Severity="Severity.Info" ShowCloseIcon="false">
                    You have already filled out this response. You can change your answers by changing a response on each date and clicking 'Save'.
                </MudAlert>
            </MudItem>
        }
        <MudItem xs="12">
            <MudTextField Label="Your Name" @bind-Value=@_name Variant="Variant.Outlined" Placeholder="Drizzt Do'Urden" Disabled="_hasAlreadyResponded"/>
        </MudItem>
        <MudItem xs="12">
            <MudGrid Spacing="2">
                @foreach (var proposedDate in _response.ProposedDates)
                {
                    <MudItem xs="12" md="6" lg="4">
                        <MudCard Style="background-color: transparent;" Elevation="0" Outlined="true">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudStack Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center" Row="true" Spacing="0">
                                        <MudText Typo="Typo.h4" Color="Color.Primary" GutterBottom="false">@proposedDate.StartDate.ToString("ddd | MMM dd yyyy")</MudText>
                                        <MudText Typo="Typo.h4" Color="Color.Primary" GutterBottom="false">
                                            @($"{proposedDate.AcceptedResponseCount} | {proposedDate.TotalResponseCount}")
                                        </MudText>
                                    </MudStack>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                @foreach (var response in proposedDate.Responses)
                                {
                                    @if (response.Accepted)
                                    {
                                        <MudChip T="string" Icon="@Icons.Material.Filled.Check" Color="Color.Success" Size="Size.Large" Variant="Variant.Outlined" Style="font-weight: bolder;">@response.Name</MudChip>
                                    }
                                    else
                                    {
                                        <MudChip T="string" Icon="@Icons.Material.Filled.Cancel" Color="Color.Error" Size="Size.Large" Variant="Variant.Outlined" Style="font-weight: bolder;">@response.Name</MudChip>
                                    }
                                }
                            </MudCardContent>
                            <MudCardActions>
                                @{
                                    var proposedDateResponse = _request.ProposedDateResponses.First(pdr => pdr.ProposedDateId == proposedDate.Id);
                                }
                                <MudToggleGroup T="bool" SelectionMode="SelectionMode.SingleSelection"
                                                Style="width: 100%;"
                                                Size="Size.Large"
                                                Value="proposedDateResponse.Accepted" ValueChanged="() => proposedDateResponse.Accepted = !proposedDateResponse.Accepted" CheckMark FixedContent>
                                    <MudToggleItem Value="true" Text="Available" SelectedIcon="@Icons.Material.Filled.Check"  Style="font-weight: bolder;"/>
                                    <MudToggleItem Value="false" Text="Unavailable" SelectedIcon="@Icons.Material.Filled.Cancel"  Style="font-weight: bolder;"/>
                                </MudToggleGroup>
                            </MudCardActions>
                        </MudCard>
                    </MudItem>
                }
            </MudGrid>
        </MudItem>
        <MudItem xs="12">
            <MudButton OnClick="OnSaveClickedAsync" Color="Color.Primary" Variant="Variant.Filled" Size="Size.Large" FullWidth="true" Disabled="_isLoading">
                <MudText Typo="Typo.h4" GutterBottom="false" Color="Color.Secondary">
                    @if (_isLoading)
                    {
                        <span>Saving...</span>
                    }
                    else
                    {
                        <span>Save</span>
                    }
                </MudText>
            </MudButton>
        </MudItem>
    </MudGrid>
    <img src="/divider.png" alt="Fancy divider" class="fantasy-divider py-2" />
}

